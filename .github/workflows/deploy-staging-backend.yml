name: Deploy Backend to Staging
on:
  push:
    branches:
      - staging/backend

env:
  DEPLOY_DIRECTORY: /var/containers/

jobs:
  build:
    strategy:
      matrix:
        services: [ game-system, idc-system, info-collection-system, user-profile-management ]
    continue-on-error: true
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: "actions/checkout@v3"

      - name: Build Spring Boot application
        uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - run: |
          cd ${{ github.workspace }}/rigsg/${{ matrix.services }}/src/main/resources
          rm application.yml
          mv application_docker.yml application.yml
          cd ${{ github.workspace }}/rigsg
          ./mvnw --projects ${{ matrix.services }} clean package spring-boot:repackage -DskipTests=true

      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          name: staging-deploy
          path: |
            rigsg/${{ matrix.services }}/target/**/*.jar
  deploy:
    strategy:
      matrix:
        services: [ game-system, idc-system, info-collection-system, user-profile-management ]
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: staging-deploy
          path: artifact
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts
      - name: Stop running Docker containers
        run: |
          ssh ${{ secrets.STAGING_SSH_USERNAME }}@${{ secrets.STAGING_HOST }} \
          " \
            cd $DEPLOY_DIRECTORY/${{ matrix.services }}/ && \
            sudo docker compose down \
          "
      - name: Upload JAR files
        run: rsync -avzb --delete ./artifact ${{ secrets.STAGING_SSH_USERNAME }}@${{ secrets.STAGING_HOST }}:$DEPLOY_DIRECTORY/${{ matrix.services }}/build/
      - name: Build and run Docker containers via Docker Compose
        run: |
          ssh ${{ secrets.STAGING_SSH_USERNAME }}@${{ secrets.STAGING_HOST }} \
          " \
            cd $DEPLOY_DIRECTORY/${{ matrix.services }}/ && \
            sudo docker compose up -d --build --remove-orphans \
          "
      - name: Timestamping deployment
        run: |
          ssh ${{ secrets.STAGING_SSH_USERNAME }}@${{ secrets.STAGING_HOST }} \
          " \
            cd $DEPLOY_DIRECTORY/${{ matrix.services }}/ && \
            echo "Commit ${{ github.sha }} deployed at $(TZ=":Asia/Singapore" date)" > deployment_info.txt \
          "
